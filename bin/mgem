#!/usr/bin/env ruby

require "#{File.dirname(__FILE__)}/../lib/mgem"

gems = load_gems unless ARGV[0] == 'help'

info_proc = lambda do |obj| 
  puts "  #{obj.name.ljust(30)}#{obj.description}"
end

detail_info_proc = lambda do |obj|
  puts <<INFO
  Name:        #{obj.name}
  Author:      #{obj.author}
  Description: #{obj.description}
  Website:     #{obj.website}
  Repository:  #{obj.repository}
  Protocol:    #{obj.protocol}

INFO
end

def list_active_gems(current_gems)
  puts "List of active GEMs:"
  current_gems.active.each do |obj|
    puts "  [X] #{obj.name.ljust(20)}#{obj.description}" 
  end
  puts
end

if ARGV[0] == 'info' or ARGV[0] == 'detail'
  puts "Detail information of '#{ARGV[1]}':"
  gems.search(ARGV[1], :name).each {|gem| detail_info_proc.call(gem) }
elsif ARGV[0] == 'size'
  puts "Total # of GEMs: #{gems.size}"
elsif ARGV[0] == 'list'
  if ARGV[1] == 'active'
    list_active_gems(gems)
  else
    puts "List of all GEMs:"
    gems.each { |gem| info_proc.call(gem) }
  end
elsif ARGV[0] == 'add'
  gems.activate(ARGV[1])
  puts
  list_active_gems(gems)
elsif ARGV[0] == 'rm'
  gems.deactivate(ARGV[1])
  puts
  list_active_gems(gems)
elsif ARGV[0] == 'search'
  puts "Search result for '#{ARGV[1]}':"
  gems.search(ARGV[1]).each {|gem| info_proc.call(gem) }
elsif ARGV[0] == 'update'
  puts 'Update list of GEMs...'
  gems.update!
  puts 'DONE!'
elsif ARGV[0] == 'config'
  puts <<__CONFIG__
MRuby::Build.new do |conf|
  conf.cc = ENV['CC'] || 'gcc'
  conf.ld = ENV['LD'] || 'gcc'
  conf.ar = ENV['AR'] || 'ar'

  conf.cflags << (ENV['CFLAGS'] || %w(-g -O3 -Wall -Werror-implicit-function-declaration))
  conf.ldflags << (ENV['LDFLAGS'] || %w(-lm))

#{
  gems.active.map do |g| 
    "  conf.gem :git => \'#{g.repository}\'"
  end.join("\n")
}
end
__CONFIG__
else
  puts <<INFO
mgem (Version #{MGEM_VERSION}) is a library manager for mruby

Usage:
  mgem size              How many GEMs are available?
  mgem list [active]     List GEMs
  mgem info *pattern*    Show detail information about a GEM
  mgem add *name*        Activate a GEM
  mgem rm *name*         De-Activate a GEM
  mgem search *pattern*  Search for GEMs
  mgem config            Generate a mruby build config including all active GEMs
  mgem update            Update the list of GEMs

Website:
  https://github.com/bovi/mgem
INFO
end
